version: "3.7"

services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql-server
    user: root
    volumes:
      #- /home/${USER_ROOT}/containers/mssql:/var/opt/mssql
      # windows
       - C:\containers\mssql:/var/opt/mssql/data
    ports: 
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SQL_PASSWORD}
      MSSQL_PID: ${SQL_PID}
    networks:
      - devlx-network

  sql-pad:
    image: sqlpad/sqlpad
    container_name: sql-pad
    user: root
    volumes: 
        #- /home/${USER_ROOT}/containers/sqlpad:/var/lib/sqlpad
        # windows
        - C:\containers\sqlpad:/var/lib/sqlpad
    ports:
        - "3011:3000"
    environment:
        SQLPAD_ADMIN: ${SQLPAD_ADMIN}
        SQLPAD_ADMIN_PASSWORD: ${SQLPAD_ADMIN_PASSWORD}
        SQLPAD_APP_LOG_LEVEL: info
        SQLPAD_WEB_LOG_LEVEL: warn
        SQLPAD_CONNECTIONS__sqlserverdemo__name: ${SQLPAD_CONNECTIONS__sqlserverdemo__name}
        SQLPAD_CONNECTIONS__sqlserverdemo__driver: sqlserver
        SQLPAD_CONNECTIONS__sqlserverdemo__host: mssql-server
        SQLPAD_CONNECTIONS__sqlserverdemo__database: master
        SQLPAD_CONNECTIONS__sqlserverdemo__username: ${SQLPAD_CONNECTIONS__sqlserverdemo__username}
        SQLPAD_CONNECTIONS__sqlserverdemo__password: ${SQLPAD_CONNECTIONS__sqlserverdemo__password}
    networks:
        - devlx-network
    depends_on: 
        - mssql-server

  # schedule-barbecue-api:
  #  image: ${DOCKER_REGISTRY-}schedule-barbecue-api
  #  container_name: schedule-barbecue-api
  #  user: root
  #  environment:
  #    - ASPNETCORE_ENVIRONMENT=Development
  #    - ASPNETCORE_URLS=http://+:5001
  #    - ConnectionStrings__DefaultConnection=Data Source=localhost; initial catalog=${SQL_CATALOG}; user id=${SQL_USER_ID}; password=${SQL_PASSWORD}; Integrated Security=False;
  #  build:
  #    context: .
  #    dockerfile: .docker/schedule-barbecue.dockerfile
  #  volumes: 
  #   - C:\containers\schedule_barbecue_api\logs:/app/Logs
  #  networks:
  #    - devlx-network
  #  depends_on: 
  #    - sql-pad
  #  ports:
  #    - "5001:5001"

networks:
  devlx-network:
    driver: bridge